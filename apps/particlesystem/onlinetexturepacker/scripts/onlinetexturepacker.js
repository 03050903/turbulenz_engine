// Copyright (c) 2010-2012 Turbulenz Limited

/*global TurbulenzEngine: false */
/*global Draw2D: false */
/*global Physics2DDebugDraw: false */
/*global OnlineTexturePacker: false */

TurbulenzEngine.onload = function onloadFn()
{
    var md = TurbulenzEngine.createMathDevice({});
    var gd = TurbulenzEngine.createGraphicsDevice({});
    var id = TurbulenzEngine.createInputDevice({});

    var clearColor = [0, 0, 0, 1];
    var draw2D = Draw2D.create({ graphicsDevice: gd });
    var debug = Physics2DDebugDraw.create({ graphicsDevice: gd });

    var w = 1024;
    var h = 1024;
    draw2D.configure({
        viewportRectangle: [0, 0, w, h],
        scaleMode: draw2D.scale.scale
    });
    debug.setPhysics2DViewport(draw2D.getViewport());

    var packer = new OnlineTexturePacker(w, h);
    var binColor = [1, 0, 1, 0.25];
    var realBinColor = [1, 0, 1, 1];
    var freeColor = [0, 0.5, 1, 1];
    var usedColor = [1, 0, 0, 0.5];

    var sizes = [
        [58, 47],
        [58, 46],
        [11, 36],
        [45, 67],
        [18, 70],
        [79, 38],
        [38, 74],
        [41, 56],
        [56, 79],
        [47, 29]
    ];

    var rands = [0.13125538476742804,0.37018955149687827,0.35624732822179794,0.5778503648471087,0.752433795016259,0.4940986759029329,0.415587801951915,0.16748665273189545,0.7894258792512119,0.17902388027869165,0.7542102162260562,0.5870856367982924,0.7609865281265229,0.15014457167126238,0.6539161540567875,0.8410318591631949,0.6695769736543298,0.9675273834727705,0.19339482206851244,0.03772771521471441,0.4700483991764486,0.09282789030112326,0.9377642716281116,0.18665057071484625,0.0680914435070008,0.6064401709008962,0.536524664144963,0.3945799241773784,0.5873743805568665,0.3766231087502092,0.7985270810313523,0.41636135964654386,0.12384700239636004,0.42313347454182804,0.2911697356030345,0.5482596796937287,0.7919078529812396,0.6637601400725543,0.2795718158595264,0.19722465751692653,0.8307098357472569,0.7784614693373442,0.8198562210891396,0.46354721137322485,0.8107760935090482,0.33617553277872503,0.6290766927413642,0.3161883323919028,0.8768536590505391,0.9750020252540708,0.5959983661305159,0.21330193593166769,0.3569235075265169,0.8720620709937066,0.7841729375068098,0.9721240741200745,0.43010374973528087,0.08957855380140245,0.6068201409652829,0.9313830165192485,0.8513162299059331,0.5348135030362755,0.3284315029159188,0.327875574817881,0.09325976623222232,0.2172342969570309,0.9441420796792954,0.11824099253863096,0.8933956264518201,0.21040386939421296,0.7421226068399847,0.5991110652685165,0.6101976421196014,0.41468229168094695,0.9583784095011652,0.7582759654615074,0.041249866830185056,0.8964185938239098,0.39605939388275146,0.9427960747852921,0.9345681339036673,0.5918108546175063,0.8284424778539687,0.41347214113920927,0.22534010536037385,0.22828632686287165,0.3373984657227993,0.3999629500322044,0.32932210550643504,0.019656324293464422,0.14726933417841792,0.3768388358876109,0.6249205712229013,0.5571856079623103,0.881633568322286,0.2201869727578014,0.46489600255154073,0.7377449001651257,0.6476158678997308,0.059727024752646685,0.8698079455643892,0.5748181319795549,0.2702737881336361,0.43835577205754817,0.4588044979609549,0.6416668558958918,0.17095159902237356,0.07580220350064337,0.3384119179099798,0.8991840449161828,0.8066450930200517,0.6872618531342596,0.7662580632604659,0.4419733304530382,0.5388834367040545,0.4967210611794144,0.8954950836487114,0.305688921129331,0.608245563460514,0.3645979503635317,0.7882160465233028,0.7886957535520196,0.06236770818941295,0.2850456815212965,0.19699224177747965,0.8589393417350948,0.6481355088762939,0.29474489763379097,0.5770040422212332,0.05149950785562396,0.006421696627512574,0.3536456087604165,0.006657324498519301,0.899040267104283,0.1350184609182179,0.8658899141009897,0.4956865848507732,0.3752101350110024,0.0514467409811914,0.08952482463791966,0.7344905757345259,0.5717128270771354,0.9798663659021258,0.80431765364483,0.6314525019843131,0.24618643219582736,0.8836357279215008,0.5897521688602865,0.03359884605742991,0.3678062732797116,0.18100728560239077,0.8837816868908703,0.6627563436049968,0.06632348708808422,0.88356554787606,0.0757540469057858,0.8400419659446925,0.8030512249097228,0.86830736650154,0.31788251432590187,0.3111805513035506,0.9631915704812855,0.11660146713256836,0.13429096201434731,0.264196609146893,0.9253931271377951,0.7356114482972771,0.22864331980235875,0.12587457615882158,0.2452646081801504,0.013245526934042573,0.5298326897900552,0.10433673555962741,0.18760748486965895,0.7501153510529548,0.14350330107845366,0.8504637419246137,0.04953733365982771,0.25377550977282226,0.6045234287157655,0.898849077289924,0.8861208481248468,0.010894518345594406,0.35141615895554423,0.1360706309787929,0.16121027315966785,0.8361012269742787,0.4721046651247889,0.5384419597685337,0.7221485613845289,0.12838435312733054,0.3888163333758712,0.7993351141922176,0.12772987666539848,0.07233431609347463,0.800079898443073,0.9806965566240251,0.5062260229606181,0.2668411729391664,0.8473896817304194,0.3888421426527202,0.34836157970130444,0.7099257311783731,0.5283489699941128,0.695042091421783,0.3767350181005895,0.8258961099199951,0.5566577843856066,0.15472970786504447,0.010894530452787876,0.008129440946504474,0.5008575734682381,0.3375894639175385,0.030962794087827206,0.8518804346676916,0.8093296238221228,0.6773556123953313,0.7406116579659283,0.19540920830331743,0.7550577509682626,0.1361204171553254,0.27374382480047643,0.05138456029817462,0.8762735682539642,0.5149470141623169,0.003757830010727048,0.4554643726442009,0.6671695986296982,0.5029252904932946,0.5352314007468522,0.17773466277867556,0.5409290930256248,0.9248692775145173,0.705452065449208,0.4360784359741956,0.4776822829153389,0.45233458071015775,0.2918879366479814,0.3582098395563662,0.5939989537000656,0.09719819901511073,0.22799583175219595,0.5857521060388535,0.7051093140617013,0.48621257138438523,0.9019371583126485,0.47849480737932026,0.0810624707955867,0.33956712577492,0.16098417644388974,0.12867733160965145,0.15734010352753103,0.5007120792288333,0.3818426027428359,0.689789398573339,0.2113896186929196,0.18155463063158095,0.5292951129376888,0.4165780988987535,0.812888256739825,0.591610942967236,0.5183015365619212,0.19598037120886147,0.10336508695036173,0.8074461314827204,0.9641760471276939,0.23912689252756536,0.5324297747574747,0.42797476844862103,0.37402421422302723,0.563133551273495,0.38948395545594394,0.910020477604121,0.01906526950187981,0.7379722723271698,0.9844899894669652,0.3342696879990399,0.5215715623926371,0.14101259200833738,0.6172513931524009,0.24298218544572592,0.8843125719577074,0.13590992148965597,0.033591167302802205,0.2412789787631482,0.2841720648575574,0.42361796484328806,0.7702985059004277,0.25677566905505955,0.6640646217856556,0.2886424788739532,0.26100347889587283,0.34570724982768297,0.7165563367307186,0.0947964834049344,0.2535633621737361,0.1318289078772068,0.4117834970820695,0.22110825404524803,0.3662614484783262,0.1417934913188219,0.09692979394458234,0.36192589020356536,0.15440512471832335,0.03153962688520551,0.953742430312559,0.44667693600058556,0.050687559647485614,0.8894511973485351,0.7670812730211765,0.1125016559381038,0.21542837051674724,0.6300556177739054,0.1969506978057325,0.39754419098608196,0.026890772860497236,0.7014519013464451,0.13381588249467313,0.13223011582158506,0.1157024425920099,0.1490580819081515,0.09570808825083077,0.8945038330275565,0.7218466352205724,0.023850085446611047,0.8876756187528372,0.13725335663184524,0.013355575734749436,0.8000253611244261,0.7792496315669268,0.40401400486007333,0.5499859042465687,0.3545975449960679,0.9332264130935073,0.518661196809262,0.3555968441069126,0.4662929121404886,0.5908212759532034,0.9228540379554033,0.7054687801282853,0.06283548474311829,0.044815750792622566,0.4352362819481641,0.724971515359357,0.3335040973033756,0.229238796280697,0.027281989343464375,0.8342031664215028,0.34849680005572736,0.831471219426021,0.18007673625834286,0.42300084163434803,0.07623414811678231,0.8431209262926131,0.9164611666928977,0.7153874158393592,0.2965761814266443,0.8213347161654383,0.37513064802624285,0.6087130075320601,0.5154124535620213,0.6424098769202828,0.1278995918110013,0.14127228315919638,0.8292984352447093,0.9717002653051168,0.1476924605667591,0.3796312364283949,0.7892460145521909,0.5437604475300759,0.2595327151939273,0.7194900421891361,0.11701073008589447,0.01278571947477758,0.6173466255422682,0.531662347028032,0.10430024052038789,0.142535712569952,0.8953327401541173,0.48841352155432105,0.24502961128018796,0.5137236951850355,0.6612663608975708,0.4052272548433393,0.6138637545518577,0.06924252212047577,0.6373791708610952,0.29458052129484713,0.2039917423389852,0.5629429102409631,0.7173296161927283,0.957161016529426,0.16409667488187551,0.5294809024780989,0.4546429414767772,0.8967052749358118,0.04223254416137934,0.40709871728904545,0.36393685871735215,0.6729792894329876,0.7789685686584562,0.11651960364542902,0.6191255310550332,0.7647466498892754,0.7497130373958498,0.5382504225708544,0.24455847311764956,0.5811312822625041,0.4352236744016409,0.10777296987362206,0.33893213607370853,0.8063828686717898,0.3030643109232187,0.2771526223514229,0.6242114235647023,0.28524413029663265,0.07215862860903144,0.14958786289207637,0.19094744673930109,0.8251920463517308,0.40017346711829305,0.15976275806315243,0.6305675765033811,0.2432158209849149,0.6521559085231274,0.9416552558541298,0.37294949358329177,0.606933259870857,0.6136594403069466,0.8734495635144413,0.7407696575392038,0.38689794787205756,0.7685606626328081,0.08798011369071901,0.3550026724115014,0.2629296008963138,0.19312537112273276,0.03153253439813852,0.8948010562453419,0.8380825037602335,0.5751789500936866,0.7199703985825181,0.33651358913630247,0.6440680308733135,0.12133826548233628,0.27156931930221617,0.8725377493537962,0.6130520112346858,0.1430241393391043,0.4475247331429273,0.3176405148115009,0.8280474289786071,0.22702041501179338,0.5962814521044493,0.9538583282846957,0.04384105117060244,0.4207578373607248,0.3541191848926246,0.5565727346111089,0.6290450098458678,0.8897280658129603,0.3895659204572439,0.5345771848224103,0.29615235049277544,0.4759029361885041,0.9303111794870347,0.36684668995440006,0.377197774592787,0.4717543537262827,0.6946049579419196,0.20537861459888518,0.46570418076589704,0.6747685375157744,0.49942815979011357,0.6337400015909225,0.4030173826031387,0.1070254857186228,0.0858041679020971,0.7866835871245712,0.6891633712220937,0.6136341942474246,0.4539985088631511,0.9307240708731115,0.09809082630090415,0.6330525476951152,0.23192903050221503,0.8808485756162554,0.7003844347782433,0.48166188364848495,0.11403312929905951,0.2970121237449348,0.6698936333414167,0.5317058288492262,0.23425348056480289,0.6064608350861818,0.07081282278522849,0.5632383262272924,0.5355357534717768,0.49224448250606656,0.8506096787750721,0.4926512697711587,0.11820772080682218,0.6978064505383372,0.2871708022430539,0.7124440050683916,0.3080989485606551,0.4719605054706335,0.23031007638201118,0.4200244923122227,0.23165453411638737];

    var packed = [];
    var down = [];
    var createNum = 0;

    id.addEventListener('keydown', function (keynum)
    {
        down[keynum] = true;
        if (keynum === id.keyCodes.R)
        {
            packer = new OnlineTexturePacker(w, h);
            packed = [];
            createNum = 0;
        }
        if (down[id.keyCodes.D])
        {
            rand = rands[createNum % rands.length];
            size = sizes[(rand * sizes.length) | 0];
            for (i = 0; i < 25; i += 1)
            {
                packed.push(packer.pack(size[0], size[1]));
            }
            createNum += 1;
        }
        if (down[id.keyCodes.F])
        {
            rand = rands[createNum % rands.length];
            size = sizes[(rand * sizes.length) | 0];
            for (i = 0; i < 125; i += 1)
            {
                packed.push(packer.pack(size[0], size[1]));
            }
            createNum += 1;
        }
    });
    id.addEventListener('keyup', function (keynum)
    {
        down[keynum] = false;
    });

    var create = function createFn()
    {
        var rand, size, i;
        if (down[id.keyCodes.A])
        {
            rand = rands[createNum % rands.length];
            size = sizes[(rand * sizes.length) | 0];
            packed.push(packer.pack(size[0], size[1]));
            createNum += 1;
        }
        if (down[id.keyCodes.S])
        {
            rand = rands[createNum % rands.length];
            size = sizes[(rand * sizes.length) | 0];
            for (i = 0; i < 5; i += 1)
            {
                packed.push(packer.pack(size[0], size[1]));
            }
            createNum += 1;
        }
    };
    TurbulenzEngine.setInterval(create, 1000/50);

    var prevBins = packer.bins.length;
    var update = function updateFn()
    {
        if (!gd.beginFrame())
        {
            return;
        }

        if (prevBins !== packer.bins.length)
        {
            prevBins = packer.bins.length;
            draw2D.configure({
                viewportRectangle: [0, 0, w * prevBins, h],
                scaleMode: draw2D.scale.scale
            });
            debug.setPhysics2DViewport(draw2D.getViewport());
        }

        gd.clear(clearColor);
        debug.setScreenViewport(draw2D.getScreenSpaceViewport());
        debug.begin();

        var i;
        for (i = 0; i < packer.bins.length; i += 1)
        {
            debug.drawRectangle(
                (w * i) + 1, 0,
                w * (i + 1), h - 1,
                binColor);
            debug.drawRectangle(
                (w * i) + 1, 0,
                (w * i) + packer.bins[i].w, packer.bins[i].h - 1,
                realBinColor);
        }

        // XXX non-public API (free is private)
        i = 0;
        packer.free.traverse(function (node)
        {
            if (i % 2000 === 1999)
            {
                // debug draw runs out of space in index buffers eventually, and not handled.
                debug.end();
                debug.begin();
            }
            i += 1;

            var rect = node.data;
            if (rect && rect.w >= 2 && rect.h >= 2)
            {
                debug.drawRectangle(
                    (w * rect.bin) + rect.x, rect.y,
                    (w * rect.bin) + rect.x + rect.w, rect.y + rect.h,
                    freeColor);
                debug.drawLine(
                    (w * rect.bin) + rect.x, rect.y,
                    (w * rect.bin) + rect.x + rect.w, rect.y + rect.h,
                    freeColor);
                debug.drawLine(
                    (w * rect.bin) + rect.x, rect.y + rect.h,
                    (w * rect.bin) + rect.x + rect.w, rect.y,
                    freeColor);
            }

            return true;
        });

        var count = packed.length;
        for (i = 0; i < count; i += 1)
        {
            if (i % 2000 === 1999)
            {
                // debug draw runs out of space in index buffers eventually, and not handled.
                debug.end();
                debug.begin();
            }

            var rect = packed[i];
            debug.drawRectangle(
                (w * rect.bin) + rect.x, rect.y,
                (w * rect.bin) + rect.x + rect.w, rect.y + rect.h,
                usedColor);
        }

        debug.end();
        gd.endFrame();
    };
    TurbulenzEngine.setInterval(update, 1000 / 20);
};
